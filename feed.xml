<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://maxbenker.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://maxbenker.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-01-29T19:47:16+00:00</updated><id>https://maxbenker.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple personal website. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><author><name>Maxmimilian Benker</name></author><entry><title type="html">Writing a thesis in LaTeX - part 4</title><link href="https://maxbenker.github.io/blog/2022/LaTeX-Thesis-Lessons-Learned-Part-4/" rel="alternate" type="text/html" title="Writing a thesis in LaTeX - part 4"/><published>2022-11-09T17:00:00+00:00</published><updated>2022-11-09T17:00:00+00:00</updated><id>https://maxbenker.github.io/blog/2022/LaTeX-Thesis-Lessons-Learned-Part-4</id><content type="html" xml:base="https://maxbenker.github.io/blog/2022/LaTeX-Thesis-Lessons-Learned-Part-4/"><![CDATA[<p>In the <a href="/blog/2022/LaTeX-Thesis-Lessons-Learned-Part-3/">previous part</a> of this blog series, an introduction to the <code class="language-plaintext highlighter-rouge">bib2gls</code> and <code class="language-plaintext highlighter-rouge">glossaries-extra</code> packages for automatically generating glossaries was given. In this last part of the blog series, a neat workflow for creating and integrating vector graphics (e.g., svg graphics) in the thesis document will be presented. This will be done in two steps:</p> <ol> <li><a href="#creating-scientific-plots-with-matplotlib">Creating vector graphics</a> in <code class="language-plaintext highlighter-rouge">matplotlib</code>.</li> <li><a href="#integrating-vector-graphics-in-latex">Integrating the vector graphics in LaTeX</a> with the help of Inkscape</li> </ol> <p>A zipped version of the project can be downloaded <a href="/downloads/thesis - SVG.zip">here</a>. Compiling the project gives you the following pdf:</p> <p style="text-align: center;"> <object data="/latex/thesis - SVG/main.pdf" width="75%" height="500" type="application/pdf"></object> </p> <h2 id="prerequisites">Prerequisites</h2> <ol> <li><code class="language-plaintext highlighter-rouge">python</code>, <code class="language-plaintext highlighter-rouge">matplotlib</code> and <code class="language-plaintext highlighter-rouge">numpy</code> must be installed. By <a href="https://www.anaconda.com/products/distribution">installing anaconda</a>, all that is done at once.</li> <li><a href="https://inkscape.org/release/inkscape-1.2.1/">Inkscape must be installed</a> and added to the system’s PATH variables (make sure to chose this option during installation).</li> <li>The following user defined tool must be added in Texstudio: <code class="language-plaintext highlighter-rouge">txs:///pdflatex/[--shell-escape]</code> (Preferences &gt; Build &gt; add the command in the lower part of the window and give it a name, such as “svg2tex”)</li> </ol> <h2 id="creating-scientific-plots-with-matplotlib">Creating scientific plots with <code class="language-plaintext highlighter-rouge">matplotlib</code></h2> <p>First, we will add a new folder to the LaTeX project, which contains the <a href="https://jupyter.org/">Jupyter notebook</a> file that creates the vector graphics. Furthermore, we add a mplstyle file, which contains necessary <code class="language-plaintext highlighter-rouge">matplotlib</code> style settings, in the source folder. The final project structure looks as follows:</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex">thesis
│   main.tex
│   refs.bib     
│
└───source
│   │   introduction.tex
│   │   results.tex
│   │   conclusions.tex
│   │   appendix.tex
│   │   acronyms.bib 
│   │   notations.bib
│   │   symbols.bib 
│   │   svg.mplstyle <span class="c">% new: mplstyle file with the necessary matplotlib style settings</span>
│   
└───figures
│   │   jamesWebb.png
│
└───notebooks <span class="c">% new: folder for jupyter notebooks</span>
│   │   plot.ipynb <span class="c">% new: python notebook creating a vector graphic and storing it in the figures folder</span></code></pre></figure> <p>First, the vector graphic, that will be integrated in the LaTeX document, has to be generated. This is done in the notebook <code class="language-plaintext highlighter-rouge">plot.ipynb</code>, which loads the necessary python packages <code class="language-plaintext highlighter-rouge">numpy</code> and <code class="language-plaintext highlighter-rouge">matplotlib</code>:</p> <figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="n">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span></code></pre></figure> <p>Futhermore, the pre-defined matplotlib style <code class="language-plaintext highlighter-rouge">svg.mplstyle</code> is loaded and used for all plots:</p> <figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">plt</span><span class="p">.</span><span class="n">style</span><span class="p">.</span><span class="nf">use</span><span class="p">([</span><span class="sh">'</span><span class="s">file:../source/svg.mplstyle</span><span class="sh">'</span><span class="p">])</span></code></pre></figure> <p>The file <code class="language-plaintext highlighter-rouge">svg.mplstyle</code> contains only a few <code class="language-plaintext highlighter-rouge">matplotlib</code> settings, that we will need for integrating the vector graphic in the LaTeX document:</p> <figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="c1"># set svg fonttype
</span><span class="n">svg</span><span class="p">.</span><span class="n">fonttype</span> <span class="p">:</span> <span class="n">none</span>

<span class="c1"># do not use unicode minus
</span><span class="n">axes</span><span class="p">.</span><span class="n">unicode_minus</span> <span class="p">:</span> <span class="bp">False</span></code></pre></figure> <p>That’s it. Now, we can create vector graphics and save them in the figures folder:</p> <figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">linspace</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span> <span class="c1"># create vector of inputs
</span><span class="n">y</span> <span class="o">=</span> <span class="n">x</span><span class="o">**</span><span class="mi">2</span> <span class="o">+</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="nf">normal</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mf">0.01</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="nf">len</span><span class="p">(</span><span class="n">x</span><span class="p">))</span> <span class="c1"># create vector of outputs
</span>
<span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">subplots</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span> <span class="c1"># create figure
</span><span class="n">ax</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span> <span class="c1"># plot data
</span><span class="n">ax</span><span class="p">.</span><span class="nf">set</span><span class="p">(</span><span class="n">xlabel</span><span class="o">=</span><span class="sh">'</span><span class="s">\$x\longrightarrow\$</span><span class="sh">'</span><span class="p">,</span> <span class="n">ylabel</span><span class="o">=</span><span class="sh">'</span><span class="s">\$f(x)\longrightarrow\$</span><span class="sh">'</span><span class="p">,</span> <span class="n">title</span><span class="o">=</span><span class="sh">'</span><span class="s">\$f(x) = x^2 + \epsilon, \quad \epsilon \sim N(0, 0.01)\$</span><span class="sh">'</span><span class="p">)</span> <span class="c1"># set labels and title
</span><span class="n">ax</span><span class="p">.</span><span class="nf">grid</span><span class="p">()</span> <span class="c1"># display a grid
</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">savefig</span><span class="p">(</span><span class="sh">'</span><span class="s">../figures/plot.svg</span><span class="sh">'</span><span class="p">,</span> <span class="nb">format</span><span class="o">=</span><span class="sh">'</span><span class="s">svg</span><span class="sh">'</span><span class="p">)</span> <span class="c1"># save the figure
</span><span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span> <span class="c1"># show the figure</span></code></pre></figure> <p>This creates and saves a vector graphic called <code class="language-plaintext highlighter-rouge">plot.svg</code> in the figures folder.</p> <p>In the next step, this svg figure will be further processed by Inkscape to a pdf_tex file and a pdf file, which finally can be integrated in the LaTeX document. How to do this automatically is described in the next section.</p> <h2 id="integrating-vector-graphics-in-latex">Integrating vector graphics in LaTeX</h2> <p>First, the <a href="https://ctan.org/pkg/svg?lang=en">svg package</a> is loaded in the preamble of the <code class="language-plaintext highlighter-rouge">main.tex</code> file and a few options are set:</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex"><span class="k">\usepackage</span><span class="p">{</span>svg<span class="p">}</span>
<span class="k">\svgpath</span><span class="p">{{</span>figures/<span class="p">}}</span> <span class="c">% tell the svg package where to find the svg files</span></code></pre></figure> <p>One very handy feature of integrating vector graphics this way is, that the font can be globally defined for <em>all</em> vector graphics in the <em>entire</em> document. This can be done with the <code class="language-plaintext highlighter-rouge">floatrow</code> package. Say we want the fontsize of all vector graphics in the document to be smaller (e.g., <code class="language-plaintext highlighter-rouge">footnotesize</code>), than this can be set globally in the preamble:</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex"><span class="k">\usepackage</span><span class="p">{</span>floatrow<span class="p">}</span> <span class="c">% for global setting of fontsize in floats (tables and figures)</span>
<span class="k">\floatsetup</span><span class="na">[figure]</span><span class="p">{</span>font=<span class="p">{</span>footnotesize<span class="p">}}</span></code></pre></figure> <p>What’s still missing is the actual integration of the vector graphic in the <code class="language-plaintext highlighter-rouge">introduction.tex</code> file. This can be done as follows:</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex"><span class="nt">\begin{figure}</span>
	<span class="k">\centering</span>
	<span class="k">\includesvg</span><span class="p">{</span>plot<span class="p">}</span>
	<span class="k">\caption</span><span class="p">{</span>A sample vector graphic<span class="p">}</span>
	<span class="k">\label</span><span class="p">{</span>fig:plot<span class="p">}</span>
<span class="nt">\end{figure}</span> 	</code></pre></figure> <p>That is it! Feel free to try to integrate a second figure and change the fontsize to <code class="language-plaintext highlighter-rouge">large</code> and see what happens.</p> <p><em>Note, that in order to successfully compile the entire document including the svg file and the nomenclature in TeXstudio, you have to compile in the following order: “svg2tex” user tool &gt; “bib2gls” user tool &gt; F5.</em></p> <h2 id="summary">Summary</h2> <p>In this last part of the bolg series, an automated workflow for integrating vector graphics into a LaTeX document was presented. The main takeaways should be:</p> <ol> <li><code class="language-plaintext highlighter-rouge">matplotlib</code> is a free and efficient way of creating svg files that can easily be integrated into a LaTeX document</li> <li>With the help of the <code class="language-plaintext highlighter-rouge">svg</code> and <code class="language-plaintext highlighter-rouge">floatrow</code> packages, the fonts of vector graphics can be globally set. This leads to a uniform appearance of all plots and can be handy for late changes.</li> </ol> <p>With this last part of the blog series, I hope I could convince you that writing a thesis in LaTeX is worth the effort and I hope that I could help you to write a beautiful thesis in LaTeX with less pain but more fun!</p>]]></content><author><name>Maxmimilian Benker</name></author><category term="research"/><category term="LaTeX"/><category term="python"/><summary type="html"><![CDATA[Create and integrate beautiful vector graphics]]></summary></entry><entry><title type="html">Writing a thesis in LaTeX - part 3</title><link href="https://maxbenker.github.io/blog/2022/LaTeX-Thesis-Lessons-Learned-Part-3/" rel="alternate" type="text/html" title="Writing a thesis in LaTeX - part 3"/><published>2022-11-06T20:00:00+00:00</published><updated>2022-11-06T20:00:00+00:00</updated><id>https://maxbenker.github.io/blog/2022/LaTeX-Thesis-Lessons-Learned-Part-3</id><content type="html" xml:base="https://maxbenker.github.io/blog/2022/LaTeX-Thesis-Lessons-Learned-Part-3/"><![CDATA[<p>In the <a href="/blog/2022/LaTeX-Thesis-Lessons-Learned-Part-2/">previous part</a> of this blog series, useful LaTeX packages, commands and hacks were introduced. The next step is adding a nomenclature which contains all acronyms, symbols and notations of the document. This can be done, for example, by reviewing the final document and manually creating and inserting a table. The disadvantage of this manual approach is that if an abbreviation or symbol has to be changed, it has to be changed manually everywhere in the entire document, potentially leading to one or two cases that are missed. Furthermore, acronyms have to be defined with their first use. Going back and forth through the document and constantly enhancing the content, the place of the first use can change and one might forget to adjust the definition of the abbreviation. Either way, creating a nomenclature manually requires an author to keep one more thing in mind, when all that the author should actually care about, is the content of the thesis.</p> <p>In this blog post, an automatic approach for integrating a nomenclature in a LaTeX thesis will be introduced. The approach uses the packages <a href="https://ctan.org/pkg/bib2gls?lang=de"><code class="language-plaintext highlighter-rouge">bib2gls</code></a> and <a href="https://www.ctan.org/pkg/glossaries-extra"><code class="language-plaintext highlighter-rouge">glossaries-extra</code></a> and consists of two main steps:</p> <ol> <li><a href="#preparing-the-bib-files-for-bib2gls">The acronyms are stored in a bib file</a>. This bib file will be translated to a glstex file in which all acronyms, notations and symbols are listed and sorted by the <code class="language-plaintext highlighter-rouge">bib2gls</code> package</li> <li>The <code class="language-plaintext highlighter-rouge">glossaries-extra</code> package will use the glstex file and <a href="#using-the-glossaries-extra-package">compile a nomenclature</a></li> </ol> <p>In the following, the two steps will be explained in more detail and a zipped version of the project can be downloaded <a href="/downloads/thesis - GLS.zip">here</a>, which results in the following pdf:</p> <p style="text-align: center;"> <object data="/latex/thesis - GLS/main.pdf" width="75%" height="500" type="application/pdf"></object> </p> <h2 id="prerequisites">Prerequisites</h2> <ol> <li>In order for <code class="language-plaintext highlighter-rouge">bib2gls</code> to work as intended, <code class="language-plaintext highlighter-rouge">Java</code> must be installed, which can be downloaded <a href="https://www.java.com/download/">here</a>.</li> <li>Install <code class="language-plaintext highlighter-rouge">bib2gls</code> via MikTeX Console: Open MikTeX Console &gt; Packages &gt; Search for bib2gls &gt; right click &gt; install.</li> <li>In order to run <code class="language-plaintext highlighter-rouge">bib2gls</code> from TeXstudio, a user defined tool needs to be set: Preferences &gt; Build &gt; add the following in the lower part of the window: <code class="language-plaintext highlighter-rouge">path/to/bib2gls.exe %</code> and give it a name (e.g., “bib2gls”). You should see the the user defined tool in: Tools &gt; User.</li> </ol> <h2 id="preparing-the-bib-files-for-bib2gls">Preparing the bib files for <code class="language-plaintext highlighter-rouge">bib2gls</code></h2> <p>Since the acronyms, notations and symbols are stored in bib files, there are three new files in the source folder of the LaTeX project defined in the <a href="/blog/2022/LaTeX-Thesis-Lessons-Learned-Part-1/">first part</a> of this blog series:</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex">thesis
│   main.tex
│   refs.bib     
│
└───source
│   │   introduction.tex
│   │   results.tex
│   │   conclusions.tex
│   │   appendix.tex
│   │   acronyms.bib <span class="c">% new: bib file with acronyms</span>
│   │   notations.bib <span class="c">% new: bib file with notations</span>
│   │   symbols.bib <span class="c">% new: bib file with symbols</span>
│   
└───figures
│   │   jamesWebb.png</code></pre></figure> <p>The bib file <code class="language-plaintext highlighter-rouge">acronyms.bib</code> looks as follows:</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex">@acronym<span class="p">{</span>ml,
	short=<span class="p">{</span>ML<span class="p">}</span>,
	name=<span class="p">{</span>ML<span class="p">}</span>,
	long=<span class="p">{</span>machine learning<span class="p">}</span>
<span class="p">}</span>
@acronym<span class="p">{</span>dl,
	short=<span class="p">{</span>DL<span class="p">}</span>,
	name=<span class="p">{</span>DL<span class="p">}</span>,
	long=<span class="p">{</span>deep learning<span class="p">}</span>
<span class="p">}</span>
@acronym<span class="p">{</span>fft,
	short=<span class="p">{</span>FFT<span class="p">}</span>,
	name=<span class="p">{</span>FFT<span class="p">}</span>,
	plural=<span class="p">{</span>FFTs<span class="p">}</span>,
	long=<span class="p">{</span>fast Fourier transform<span class="p">}</span>,
	longplural=<span class="p">{</span>fast Fourier transforms<span class="p">}</span>
<span class="p">}</span></code></pre></figure> <p>It can be seen that each acronym can simply be declared with <code class="language-plaintext highlighter-rouge">@acronym{&lt;label&gt;, &lt;keys&gt;}</code>. Accordingly, the bib file <code class="language-plaintext highlighter-rouge">notations.bib</code> looks as follows:</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex">@symbol<span class="p">{</span>determinant,
	name=<span class="p">{\(</span><span class="nv">\mathrm</span><span class="p">{</span><span class="nb">det</span><span class="p">}</span><span class="o">(</span><span class="nb">X</span><span class="o">)</span><span class="p">\)}</span>,
	description=<span class="p">{</span>determinant of a matrix<span class="p">}</span>
<span class="p">}</span>
@symbol<span class="p">{</span>abs,
	name=<span class="p">{\(</span><span class="nb">|x|</span><span class="p">\)}</span>,
	description=<span class="p">{</span>absolute value of a variable<span class="p">}</span>
<span class="p">}</span></code></pre></figure> <p>In this case, each entry can be defined using <code class="language-plaintext highlighter-rouge">@symbol{&lt;label&gt;, &lt;keys&gt;}</code>. The bib file <code class="language-plaintext highlighter-rouge">symbols.bib</code> looks as similar:</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex">@symbol<span class="p">{</span>x<span class="p">_</span>dot,
	name=<span class="p">{</span><span class="k">\ensuremath</span><span class="p">{</span><span class="k">\dot</span><span class="p">{</span>x<span class="p">}}}</span>,
	description=<span class="p">{</span>velocity in <span class="k">\unit</span><span class="p">{</span><span class="k">\meter\per\second</span><span class="p">}}</span>
<span class="p">}</span>
@symbol<span class="p">{</span>F,
	name=<span class="p">{</span><span class="k">\ensuremath</span><span class="p">{</span>F<span class="p">}}</span>,
	description=<span class="p">{</span>force<span class="p">}</span>
<span class="p">}</span>
@symbol<span class="p">{</span>omega,
	name=<span class="p">{</span><span class="k">\ensuremath</span><span class="p">{</span><span class="k">\omega</span><span class="p">}}</span>,
	description=<span class="p">{</span>angular velocity in <span class="k">\unit</span><span class="p">{</span><span class="k">\per\second</span><span class="p">}}</span>
<span class="p">}</span></code></pre></figure> <h2 id="using-the-glossaries-extra-package">Using the <code class="language-plaintext highlighter-rouge">glossaries-extra</code> package</h2> <p>The pre-defined acronyms, notations and symbols can now be referenced with the <code class="language-plaintext highlighter-rouge">glossaries-extra</code> package. But first the package needs to be integrated (i.e., <code class="language-plaintext highlighter-rouge">\usepackage{glossaries-extra}</code>) and the three bib files have to loaded with <code class="language-plaintext highlighter-rouge">\GlsXtrLoadResources[src=path/to/file]</code> in the preamble:</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex"><span class="k">\usepackage</span><span class="na">[record,style=indexgroup]</span><span class="p">{</span>glossaries-extra<span class="p">}</span>
<span class="k">\setabbreviationstyle</span><span class="na">[acronym]</span><span class="p">{</span>long-short<span class="p">}</span>
<span class="c">% acronyms</span>
<span class="k">\GlsXtrLoadResources</span><span class="na">[src=source/acronyms,sort=letter-nocase,group=Acronyms]</span>
<span class="c">% notations</span>
<span class="k">\GlsXtrLoadResources</span><span class="na">[src=source/notations,sort=letter-nocase,group=Notations]</span>
<span class="c">% symbols</span>
<span class="k">\GlsXtrLoadResources</span><span class="na">[src=source/symbols,sort=letter-nocase,group=Symbols]</span>
<span class="c">% rename the chapter from GLossary to Nomenclature</span>
<span class="k">\renewcommand*</span><span class="p">{</span><span class="k">\glossaryname</span><span class="p">}{</span>Nomenclature<span class="p">}</span></code></pre></figure> <p>Above, a certain style for displaying acronyms was already set (i.e., <code class="language-plaintext highlighter-rouge">\setabbreviationstyle[acronym]{long-short}</code>), which makes sure that an acronym is fully displayed and defined when it is first used. Furthermore, the name of the chapter was changed from “Glossary” to “Nomenclature”. See section 1.7 of the pdf above for examples.</p> <p>In the document, the nomenclature is printed with the <code class="language-plaintext highlighter-rouge">\printunsrtglossaries</code>:</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex"><span class="k">\frontmatter</span> <span class="c">% switches to lower case roman page numbers</span>
<span class="k">\tableofcontents</span>
<span class="k">\listoffigures</span>
<span class="k">\listoftables</span>
<span class="k">\printunsrtglossaries</span></code></pre></figure> <p>The glossaries are called is plural as technically there are three glossaries (acronyms, notations and symbols), which have to be printed. However, they are automatically organized in groups due to the <code class="language-plaintext highlighter-rouge">style=indexgroup</code> option that was set when loading the <code class="language-plaintext highlighter-rouge">glossaries-extra</code> package in the preamble (more styles can be found <a href="https://www.dickimaw-books.com/gallery/glossaries-styles/">here</a>).</p> <p>Now, the acronyms, notations of symbols can be referenced with the <code class="language-plaintext highlighter-rouge">\gls{&lt;label&gt;}</code> command. In the <code class="language-plaintext highlighter-rouge">introduction.tex</code> file this is exemplarily done:</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex">Usually the first time derivative is denoted as <span class="k">\gls</span><span class="p">{</span>x<span class="p">_</span>dot<span class="p">}</span> and <span class="k">\gls</span><span class="p">{</span>ml<span class="p">}</span> is a field that has been thriving in recent years, especially due to advances in <span class="k">\gls</span><span class="p">{</span>dl<span class="p">}</span>. When <span class="k">\gls</span><span class="p">{</span>ml<span class="p">}</span> is called for the second time, only its acronym is displayed.</code></pre></figure> <p>It is also possible to use plural terms with the <code class="language-plaintext highlighter-rouge">\glspl{&lt;label&gt;}</code> command:</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex">it is possible to write about several <span class="k">\glspl</span><span class="p">{</span>fft<span class="p">}</span>.</code></pre></figure> <p>Check out the pdf displayed above, where the nomenclature is automatically created. The acronyms, notations and symbols are divided into three groups and are sorted within their respective group. Furthermore, only entires actually used in the document are displayed and the page number of the first use is added. This would be a lot more work if done manually by hand. In case the page number should be hidden, adding <code class="language-plaintext highlighter-rouge">nonumberlist</code> to the options of the <code class="language-plaintext highlighter-rouge">glossaries-extra</code> package will do the trick.</p> <p><em>Note, that <code class="language-plaintext highlighter-rouge">bib2gls</code> needs the aux files to identify the acronyms, notations and symbols. Hence, first compile the document, then run <code class="language-plaintext highlighter-rouge">bib2gls</code> and the re-compile the document for final results.</em></p> <h2 id="summary">Summary</h2> <p>The key takeaways of this blog should be that</p> <ul> <li>creating a nomenclature with <code class="language-plaintext highlighter-rouge">glossaries-extra</code> is recommended as it automates the process and avoids errors and that</li> <li><code class="language-plaintext highlighter-rouge">bib2gls</code> is a convenient tool for outsourcing the definitions of acronyms, notations and symbols to bib files.</li> </ul> <p>In the <a href="/blog/2022/LaTeX-Thesis-Lessons-Learned-Part-4/">next part</a> we will look at a workflow for plotting vector graphics with <code class="language-plaintext highlighter-rouge">matpltolib</code> and automatically integrating the vector graphics in the LaTeX thesis document.</p>]]></content><author><name>Maxmimilian Benker</name></author><category term="research"/><category term="LaTeX"/><summary type="html"><![CDATA[Integrate a nomenclature with glossaries-extra and bib2gls]]></summary></entry><entry><title type="html">Writing a thesis in LaTeX - part 2</title><link href="https://maxbenker.github.io/blog/2022/LaTeX-Thesis-Lessons-Learned-Part-2/" rel="alternate" type="text/html" title="Writing a thesis in LaTeX - part 2"/><published>2022-11-05T20:00:00+00:00</published><updated>2022-11-05T20:00:00+00:00</updated><id>https://maxbenker.github.io/blog/2022/LaTeX-Thesis-Lessons-Learned-Part-2</id><content type="html" xml:base="https://maxbenker.github.io/blog/2022/LaTeX-Thesis-Lessons-Learned-Part-2/"><![CDATA[<p>In the <a href="/blog/2022/LaTeX-Thesis-Lessons-Learned-Part-1/">first part</a> of this blog series, a minimal working example (MWE) of a LaTeX thesis project was derived. This MWE is rather basic and, therefore, this blog post will introduce additional commands and packages that enhance the quality of the document and make writing a thesis in LaTeX even more convenient. This blog post is about the following topics:</p> <ol> <li>Introduction of useful commands and hacks: <ul> <li><a href="#compile-only-parts-of-a-document"><code class="language-plaintext highlighter-rouge">\includeonly{&lt;path/to/file.tex&gt;}</code></a> for only compiling parts of the thesis which can significantly accelerate compilation.</li> <li><a href="#automatically-filter-reference-information">automatically filter reference information</a></li> <li><a href="#avoiding-widows-and-orphans">avoiding so-called widows and orphans</a> for nicer typesetting</li> </ul> </li> <li>Introduction of useful packages: <ul> <li><a href="#csquotes"><code class="language-plaintext highlighter-rouge">csquotes</code></a> for citing text</li> <li><a href="#siunitx"><code class="language-plaintext highlighter-rouge">siunitx</code></a> for nice and flexible display of numbers with and without SI units</li> <li><a href="#cleveref"><code class="language-plaintext highlighter-rouge">cleveref</code></a> for better referencing to chapters, sections, figures and tables</li> <li><a href="#enumitem"><code class="language-plaintext highlighter-rouge">enumitem</code></a> for nicer enumerations and description lists</li> </ul> </li> </ol> <p>The final zipped LaTeX project can be downloaded <a href="/downloads/thesis.zip">here</a>.</p> <h2 id="commands">Commands</h2> <p>Below, a few commands (and hacks) that make life easier in LaTeX and produce nicer documents will be presented.</p> <h3 id="compile-only-parts-of-a-document">Compile only parts of a document</h3> <p>When working on a thesis document, one usually does not write all chapters in parallel but rather one after another. Therefore, compiling the single chapter, that is currently being drafted, is often sufficient. This can be achieved by integrating the <code class="language-plaintext highlighter-rouge">\includeonly{&lt;path/to/file.tex&gt;}</code> command in the preable. For example, adding</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex"><span class="k">\includeonly</span><span class="p">{</span>source/introduction.tex<span class="p">}</span>
<span class="nt">\begin{document}</span></code></pre></figure> <p>to the preamble of the <code class="language-plaintext highlighter-rouge">main.tex</code> file from the <a href="/blog/2022/LaTeX-Thesis-Lessons-Learned-Part-1/">MWE derived in part 1</a> of this blog series, leads to only compiling the introduction and the following pdf:</p> <p style="text-align: center;"> <object data="/latex/thesis/main.pdf" width="75%" height="500" type="application/pdf"></object> </p> <p>It can be seen that only Chapter 1 Introduction is compiled and the other chapters are ignored. In large LaTeX documents this can save a lot of compile time and accelerate the process of writing significantly.</p> <h3 id="automatically-filter-reference-information">Automatically filter reference information</h3> <p>In the <a href="/blog/2022/LaTeX-Thesis-Lessons-Learned-Part-1/">MWE from part 1</a>, two references were integrated, that end up being listed in the bibliography (see the pdf viewer above). It can be seen that the reference entry for the Nature paper by Rumelhart et al. has an ISSN and DOI. The first is the international serial number of the nature journal and the latter is the digital object identifier of the article. In order to find the reference, the DOI is sufficient in this case. The ISSN of the journal is not a necessary information and can be deleted.</p> <p>In contrast, the other reference entry, which is a book by Bishop, has an ISBN, which is a necessary information for finding and matching the reference.</p> <p>Usually, we do not want redundant or unnecessary information in the bibliography. There are two ways of handling this: first, the ISSN of the paper by Rumelhart et al. can be deleted from the bib file manually:</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex">@book<span class="p">{</span>bishopPatternRecognitionMachine2006,
	title = <span class="p">{</span>Pattern Recognition and Machine Learning<span class="p">}</span>,
	author = <span class="p">{</span>Bishop, Christopher M.<span class="p">}</span>,
	year = <span class="p">{</span>2006<span class="p">}</span>,
	series = <span class="p">{</span>Information Science and Statistics<span class="p">}</span>,
	publisher = <span class="p">{</span>Springer<span class="p">}</span>,
	address = <span class="p">{</span>New York, NY<span class="p">}</span>,
	isbn = <span class="p">{</span>978-0-387-31073-2<span class="p">}</span>,
	lccn = <span class="p">{</span>Q327 .B52 2006<span class="p">}</span>
<span class="p">}</span>

@article<span class="p">{</span>rumelhartLearningRepresentationsBackpropagating1986,
	title = <span class="p">{</span>Learning Representations by Back-Propagating Errors<span class="p">}</span>,
	author = <span class="p">{</span>Rumelhart, David E. and Hinton, Geoffrey E. and Williams, Ronald J.<span class="p">}</span>,
	year = <span class="p">{</span>1986<span class="p">}</span>,
	journal = <span class="p">{</span>Nature<span class="p">}</span>,
	volume = <span class="p">{</span>323<span class="p">}</span>,
	number = <span class="p">{</span>6088<span class="p">}</span>,
	pages = <span class="p">{</span>533--536<span class="p">}</span>,
	doi = <span class="p">{</span>10.1038/323533a0<span class="p">}</span>,
	langid = <span class="p">{</span>english<span class="p">}</span>
<span class="p">}</span></code></pre></figure> <p>Since the information is missing, <code class="language-plaintext highlighter-rouge">bibtex</code> cannot print it in the bibliography. With a long list of references, deleting unnecessary information can be cumbersome and a source of mistakes, however.</p> <p>A second and automatic way of handling the issue is to define filters for the entire bibliography in the preamble of the <code class="language-plaintext highlighter-rouge">main.tex</code> file:</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex"><span class="c">% filter the bib entries by adding the following code to the preamble</span>
<span class="k">\DeclareSourcemap</span><span class="p">{</span>
<span class="k">\maps</span><span class="na">[datatype=bibtex]</span><span class="p">{</span>
	<span class="c">% remove fields that are always useless</span>
	<span class="k">\map</span><span class="p">{</span>
		<span class="k">\step</span><span class="na">[fieldset=abstract, null]</span>
		<span class="k">\step</span><span class="na">[fieldset=pagetotal, null]</span>
		<span class="k">\step</span><span class="na">[fieldset=month, null]</span>
	<span class="p">}</span>
	<span class="c">% remove URLs for types that are primarily printed</span>
	<span class="k">\map</span><span class="p">{</span>
		<span class="k">\pernottype</span><span class="p">{</span>software<span class="p">}</span>
		<span class="k">\pernottype</span><span class="p">{</span>online<span class="p">}</span>
		<span class="k">\pernottype</span><span class="p">{</span>report<span class="p">}</span>
		<span class="k">\pernottype</span><span class="p">{</span>techreport<span class="p">}</span>
		<span class="k">\pernottype</span><span class="p">{</span>standard<span class="p">}</span>
		<span class="k">\pernottype</span><span class="p">{</span>manual<span class="p">}</span>
		<span class="k">\pernottype</span><span class="p">{</span>misc<span class="p">}</span>
		<span class="k">\step</span><span class="na">[fieldset=url, null]</span>
		<span class="k">\step</span><span class="na">[fieldset=urldate, null]</span>
	<span class="p">}</span>
	<span class="k">\map</span><span class="p">{</span>
		<span class="k">\pertype</span><span class="p">{</span>inproceedings<span class="p">}</span>
		<span class="k">\pertype</span><span class="p">{</span>article<span class="p">}</span>
		<span class="c">% do not show ISBN or ISSN for proceedings and journal papers</span>
		<span class="k">\step</span><span class="na">[fieldset=isbn, null]</span>
		<span class="k">\step</span><span class="na">[fieldset=issn, null]</span>
	<span class="p">}</span>
	<span class="k">\map</span><span class="p">{</span>
		<span class="k">\pertype</span><span class="p">{</span>book<span class="p">}</span>
		<span class="k">\pertype</span><span class="p">{</span>inbook<span class="p">}</span>
		<span class="k">\pertype</span><span class="p">{</span>incollection<span class="p">}</span>
		<span class="c">% do not show DOI for books</span>
		<span class="k">\step</span><span class="na">[fieldset=doi, null]</span>
	<span class="p">}</span>
<span class="p">}</span>
<span class="p">}</span>
<span class="nt">\begin{document}</span></code></pre></figure> <p>Note, that the bibliography has to be re-compiled first (in TeXstudio: Tools &gt; Bibliography (F8)). This will lead to the ISSN not being printed for the paper by Rumelhart et al. in the bibliography, any more.</p> <p>Additionally, the command above will remove the fields <code class="language-plaintext highlighter-rouge">abstract</code>, <code class="language-plaintext highlighter-rouge">pagetotal</code> and <code class="language-plaintext highlighter-rouge">month</code> for all types of references, the fields <code class="language-plaintext highlighter-rouge">url</code> and <code class="language-plaintext highlighter-rouge">urldate</code> for references which are usually printed, such as standards and manuals, and remove the field <code class="language-plaintext highlighter-rouge">doi</code> for books, that should have an ISBN.</p> <h3 id="avoiding-widows-and-orphans">Avoiding widows and orphans</h3> <p>Sometimes, LaTeX produces a document with so-called widows and orphans. According to <a href="https://en.wikipedia.org/wiki/Widows_and_orphans">this Wikipedia article</a>, a widow is “a paragraph-ending line that falls at the beginning of the following page […]” and an orphan is “a paragraph-opening line that appears by itself at the bottom of a page […]”. Such widows and orphans are considered unaesthetic and should be avoided.</p> <p>On pages 2 and 5 of the MWE, there are indeed widows, which can be avoided by adding the following penalties to the preamble of <code class="language-plaintext highlighter-rouge">main.tex</code> (more information about LaTeX penalties can be found <a href="https://tex.stackexchange.com/a/51264">here</a>).</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex"><span class="c">% avoid widows and orphans by setting in the preamble:</span>
<span class="k">\widowpenalty</span>=100000
<span class="k">\clubpenalty</span>=100000
<span class="k">\displaywidowpenalty</span>=100000
<span class="nt">\begin{document}</span></code></pre></figure> <p>Now, the widows on pages 2 and 5 do not appear anymore. This is rather a hack than a command, but this worked nicely for avoiding widows and orphans in my thesis document and at, the same time, did not cause problems elsewhere.</p> <h2 id="packages">Packages</h2> <p>Having introduced some handy commands, the remainder of this blog post will introduce additional packages that come with useful features and can enhance a LaTeX thesis document.</p> <h3 id="csquotes"><a href="https://ctan.org/pkg/csquotes?lang=en"><code class="language-plaintext highlighter-rouge">csquotes</code></a></h3> <p>This package provides advanced functionalities for displaying quotes. After adding it to the preamble (i.e., <code class="language-plaintext highlighter-rouge">\usepackage{csquotes}</code>), the command</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex"><span class="k">\enquote</span><span class="p">{</span>A simple and short quote.<span class="p">}</span></code></pre></figure> <p>can be used to produce a simple inline quote. In contrast, the command</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex"><span class="k">\blockquote</span><span class="na">[\cite{bishopPatternRecognitionMachine2006}, p.~1]</span><span class="p">{</span>The problem of searching for patterns in data is a fundamental one and has a long and successful history. For instance, the extensive astronomical observations of Tycho Brahe in the 16th century allowed Johannes Kepler to discover the empirical laws of planetary motion, which in turn provided a springboard for the development of classical mechanics. Similarly, the discovery of regularities in atomic spectra played a key role in the development and verification of quantum physics in the early twentieth century. The field of pattern recognition is concerned with the automatic discovery of regularities in data through the use of computer algorithms and with the use of these regularities to take actions such as classifying the data into different categories.<span class="p">}</span></code></pre></figure> <p>produces a larger block quote which is clearly separated from the rest of the text. See section 1.3 of the <a href="#compile-only-parts-of-a-document">pdf displayed above</a> for examples.</p> <h3 id="siunitx"><a href="https://ctan.org/pkg/siunitx?lang=en"><code class="language-plaintext highlighter-rouge">siunitx</code></a></h3> <p>This is one of my favorite packages as it standardizes the quantities and units in the entire document. After integrating it in the preamble (i.e., <code class="language-plaintext highlighter-rouge">\usepackage{siunitx}</code>), all quantities can be defined using <code class="language-plaintext highlighter-rouge">\qty{&lt;number&gt;}{&lt;unit&gt;}</code>. For example,</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex"><span class="k">\qty</span><span class="p">{</span>12.5<span class="p">}{</span><span class="k">\meter\per\second\squared</span><span class="p">}</span></code></pre></figure> <p>will result in \(12.5\hskip .25em \text{m}\hskip .25em\text{s}^{-2}\). If you look closely, this is different from standard \(12.5\enspace\text{ms}^{-2}\). Using <code class="language-plaintext highlighter-rouge">siunitx</code>, a <a href="https://en.wikipedia.org/wiki/Quad_(typography)">middle space</a> is added between th number and the unit, instead of an en quad space.</p> <p>If the units should be displayed differently (e.g., \(\text{m/s}^2\) instead of \(\text{m}\hskip .25em\text{s}^{-2}\)), this is easily adjustable in the options of <code class="language-plaintext highlighter-rouge">siunitx</code>. Just change the code to</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex"><span class="k">\qty</span><span class="na">[per-mode = symbol]</span><span class="p">{</span>9.81<span class="p">}{</span><span class="k">\meter\per\second\squared</span><span class="p">}</span></code></pre></figure> <p>If this should be changed in the entire document for all quantities, the preamble can be adjusted to</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex"><span class="k">\usepackage</span><span class="na">[per-mode = symbol]</span><span class="p">{</span>siunitx<span class="p">}</span></code></pre></figure> <p>Note, how handy this can be. When writing the thesis, one can ignore the format of the unis and decide in the end, which format all units should have.</p> <p>Further features include ranges of quantities and list of quantities. See section 1.4. of the <a href="#compile-only-parts-of-a-document">pdf displayed above</a> for examples. I recommend to check out the <a href="https://ctan.org/pkg/siunitx?lang=en">documentation</a> for the SI unit names and prefixes in tables 1-6.</p> <h3 id="cleveref"><a href="https://ctan.org/pkg/cleveref?lang=en"><code class="language-plaintext highlighter-rouge">cleveref</code></a></h3> <p>In a thesis, we usually want to cross-reference to chapters, sections, figures, tables and maybe even single pages. This can be automated with the <code class="language-plaintext highlighter-rouge">cleveref</code> package. After including it in the preamble (i.e., <code class="language-plaintext highlighter-rouge">\usepackage{cleveref}</code>), the <code class="language-plaintext highlighter-rouge">cref{&lt;label&gt;}</code> command is available. For example,</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex">The introduction to this thesis is given in <span class="k">\cref</span><span class="p">{</span>ch:introduction<span class="p">}</span>.</code></pre></figure> <p>is compiled to</p> <p>“The introduction to this thesis is given in chapter 1.”</p> <p>in the compiled document. The only prerequisite is that the cross-referenced object needs a label. In this case chapter 1 has a label defined directly after its declaration in <code class="language-plaintext highlighter-rouge">introduction.tex</code>:</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex"><span class="k">\chapter</span><span class="p">{</span>Introduction<span class="p">}</span><span class="c">%</span>
<span class="k">\label</span><span class="p">{</span>ch:introduction<span class="p">}</span><span class="c">%</span></code></pre></figure> <p>See more examples in section 1.5 of the <a href="#compile-only-parts-of-a-document">pdf displayed above</a> and check out the <a href="https://ctan.org/pkg/cleveref?lang=en">documentation</a> for further details.</p> <h3 id="enumitem"><a href="https://ctan.org/pkg/enumitem?lang=en"><code class="language-plaintext highlighter-rouge">enumitem</code></a></h3> <p>The last package I recommend using is the <code class="language-plaintext highlighter-rouge">enumitem</code> package which provides control over the layout of the three basic list environments: enumerate, itemize and description. Hence, it enables also custom labels.</p> <p>For example, the following code defines a list of items with custom labels “L” followed by an arabic number starting at 1:</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex"><span class="nt">\begin{enumerate}</span>[leftmargin=*,start=1,label=<span class="p">{</span><span class="k">\bfseries</span> L<span class="k">\arabic*</span><span class="p">}</span>]<span class="c">%</span>
	<span class="k">\item</span> <span class="k">\lipsum</span><span class="na">[0-1]</span>
	<span class="k">\item</span> <span class="k">\lipsum</span><span class="na">[0-1]</span>
	<span class="k">\item</span> <span class="k">\lipsum</span><span class="na">[0-1]</span>
<span class="nt">\end{enumerate}</span></code></pre></figure> <p>See the outcome in section 1.6 of the <a href="#compile-only-parts-of-a-document">pdf displayed above</a> and also check out the <a href="https://ctan.org/pkg/enumitem?lang=en">documentation</a> for further details.</p> <h2 id="summary">Summary</h2> <p>In the second series of my lessons learned the main takeaways are</p> <ul> <li>Compiling only parts of the document with <code class="language-plaintext highlighter-rouge">\includeonly{&lt;path/to/file.tex&gt;}</code> saves a lot of time.</li> <li>Filter reference information automatically is more convenient than manually deleting information in the bib file</li> <li>Widows and orphans can be avoided easily by introducing custom penalties</li> <li>The packages <code class="language-plaintext highlighter-rouge">csquotes</code>, <code class="language-plaintext highlighter-rouge">siunitx</code>, <code class="language-plaintext highlighter-rouge">cleveref</code>, <code class="language-plaintext highlighter-rouge">enumitem</code> should be called in every preamble</li> </ul> <p>In the <a href="/blog/2022/LaTeX-Thesis-Lessons-Learned-Part-3/">next part</a> we will look at an automated way of integrating a nomenclature into a LaTeX thesis document.</p>]]></content><author><name>Maxmimilian Benker</name></author><category term="research"/><category term="LaTeX"/><summary type="html"><![CDATA[Useful LaTeX packages, commands and hacks]]></summary></entry><entry><title type="html">Writing a thesis in LaTeX - part 1</title><link href="https://maxbenker.github.io/blog/2022/LaTeX-Thesis-Lessons-Learned-Part-1/" rel="alternate" type="text/html" title="Writing a thesis in LaTeX - part 1"/><published>2022-10-30T19:00:00+00:00</published><updated>2022-10-30T19:00:00+00:00</updated><id>https://maxbenker.github.io/blog/2022/LaTeX-Thesis-Lessons-Learned-Part-1</id><content type="html" xml:base="https://maxbenker.github.io/blog/2022/LaTeX-Thesis-Lessons-Learned-Part-1/"><![CDATA[<p>In this article I will share my lessons learned about writing a thesis in LaTeX. During my PhD, I have been collecting a lot of information about how to write a thesis from the internet and from my colleagues at the TUM. Probably everyone, who decides to write a thesis in LaTeX, has to go through this tedious process but maybe I can spare you some effort by sharing my favorite LaTeX features in a series of shorter blog posts.</p> <p>First of all, I have to state that I am not a LaTeX expert, at all, and a very exhaustive guide for writing a thesis in LaTeX can be found <a href="http://tug.ctan.org/info/dickimaw/dickimaw-thesis.pdf">here</a>. Nevertheless, I can imagine that some of the routines and packages I ended up using are useful for others, too. In a series of shorter blog posts I will share them. This first part we will establish a minimal working example (i.e., a very basic LaTeX thesis document) that the following blog posts will be based upon. Hence, the content will be</p> <ol> <li>An <a href="#project-structure">exemplary LaTeX project and folder structure</a></li> <li>The <a href="#document-structure"><code class="language-plaintext highlighter-rouge">main.tex</code></a> file</li> <li><a href="#bibtex-and-zotero">Integrating references</a> with <code class="language-plaintext highlighter-rouge">bibtex</code> and <code class="language-plaintext highlighter-rouge">Zotero</code></li> <li>Some useful, <a href="#additional-packages">additional packages</a> and the <a href="#titlepage">title page</a> of a thesis</li> </ol> <p>But before we start, why should you chose LaTeX in the first place?</p> <h2 id="why-latex">Why LaTeX?</h2> <p>According to <a href="https://tex.stackexchange.com/a/1760">this answer</a> on stackexchange using LaTeX is recommended if you want your documents to be of high typographical quality (i.e., beautiful), have a lot of mathematical expressions in your document or just want to separate the content from the format of your document (i.e. if you do not want to waste time thinking about how the document looks but rather what its content is).</p> <p>Personally, I found that writing large documents in LaTeX is more stable than writing it with a what-you-see-is-what-you-get (WYSIWYG) text editor such as Word or <a href="https://www.libreoffice.org/">LibreOffice</a>. For me large texts are more difficult to control in WYSIWYG editors (e.g., I change something on page 4 and that change has negative impacts on the format of the following pages) and I also prefer the typographical quality of LaTeX.</p> <p>However, since LaTeX is not a proprietary software, there are different distributions and ways to install and use it. Below, an exemplary way of working with LaTeX on a Windows computer is explained.</p> <h2 id="latex-installation-and-text-editor">LaTeX installation and text editor</h2> <p>I wrote my thesis using a <a href="https://miktex.org/"><code class="language-plaintext highlighter-rouge">MikTeX</code></a> distribution together with the <a href="https://www.texstudio.org/"><code class="language-plaintext highlighter-rouge">TeXstudio</code></a> text editor. The following examples are based on this setup. In case you have not installed the software, yet, install <a href="https://miktex.org/"><code class="language-plaintext highlighter-rouge">MikTeX</code></a> first and install <a href="https://www.texstudio.org/"><code class="language-plaintext highlighter-rouge">TeXstudio</code></a> afterwards.</p> <p>There are other LaTeX distributions for other operation systems, such as <code class="language-plaintext highlighter-rouge">TeX Live</code> and <code class="language-plaintext highlighter-rouge">MacTeX</code>. Alternatively, you can write LaTeX documents online using <a href="https://www.sharelatex.com/"><code class="language-plaintext highlighter-rouge">overleaf</code></a>, for example. You can find further information about the different possibilities to use LaTeX on the website of the <a href="https://www.latex-project.org/get/">LaTeX project</a></p> <h2 id="project-structure">Project Structure</h2> <p>The structure of the project folder <code class="language-plaintext highlighter-rouge">thesis</code> looks like this and can be downloaded as a zipped version <a href="/downloads/thesis - MWE.zip">here</a>:</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex">thesis
│   main.tex
│   refs.bib     
│
└───source
│   │   introduction.tex
│   │   results.tex
│   │   conclusions.tex
│   │   appendix.tex
│   
└───figures
    │   jamesWebb.png</code></pre></figure> <p>The folder has two files (the main LaTeX file <code class="language-plaintext highlighter-rouge">main.tex</code> and <code class="language-plaintext highlighter-rouge">refs.bib</code>, which holds the references) and two folders (<code class="language-plaintext highlighter-rouge">source</code> and <code class="language-plaintext highlighter-rouge">figures</code>) which contain four LaTeX files and one picture, respectively. The content of the main LaTeX file files and the bib file will be discussed below.</p> <h2 id="document-structure">Document Structure</h2> <p>In the <code class="language-plaintext highlighter-rouge">main.tex</code> file, the preamble of the thesis is defined and the single chapters, that are stored in the <code class="language-plaintext highlighter-rouge">source</code> folder, are integrated. The code looks like this:</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex"><span class="k">\documentclass</span>[
paper=a4, <span class="c">% change to a5 if needed</span>
pagesize=auto, 
fontsize=11pt, 
numbers=noendperiod,
headings=twolinechapter, <span class="c">% state the chapter first, then the chapter title</span>
listof=totoc, <span class="c">% add listo of figures and tables to toc</span>
bibliography=totoc <span class="c">% add bilbiography to toc</span>
]
<span class="p">{</span>scrbook<span class="p">}</span>
<span class="c">% --------</span>
<span class="c">% Bibliography</span>
<span class="c">% --------</span>
<span class="k">\usepackage</span>[
style=authoryear, <span class="c">% other styles available</span>
backend=biber, <span class="c">% you will have to set biber as your backend in TeXstudio</span>
maxnames=2, <span class="c">% display maximum two authors</span>
]
<span class="p">{</span>biblatex<span class="p">}</span>
<span class="k">\addbibresource</span><span class="p">{</span>refs.bib<span class="p">}</span> <span class="c">% tell latex where the references are stored</span>
<span class="c">% --------</span>
<span class="c">% Additional packages</span>
<span class="c">% --------</span>
<span class="k">\usepackage</span><span class="p">{</span>lipsum<span class="p">}</span> <span class="c">% for blind text only</span>
<span class="k">\usepackage</span><span class="na">[hidelinks]</span><span class="p">{</span>hyperref<span class="p">}</span> <span class="c">% for internal links, such as Table of content (toc), figures and references</span>
<span class="k">\usepackage</span><span class="p">{</span>graphicx<span class="p">}</span> <span class="c">% for the integration of figures</span>
<span class="k">\graphicspath</span><span class="p">{{</span>figures/<span class="p">}}</span> <span class="c">% set absolute path to figures</span>
<span class="k">\usepackage</span><span class="p">{</span>booktabs<span class="p">}</span> <span class="c">% for nicer tables</span>
<span class="c">%</span>
<span class="nt">\begin{document}</span>
<span class="c">% --------</span>
<span class="c">% Ttilepage</span>
<span class="c">% --------</span>
<span class="k">\titlehead</span><span class="p">{</span>Some University
		<span class="k">\hfill</span> WS~2022/2023<span class="k">\\</span>
	School of Something<span class="k">\\</span>
	University Street 100<span class="k">\\</span>
	12345 City<span class="p">}</span>
<span class="k">\subject</span><span class="p">{</span>Dissertation<span class="p">}</span>
<span class="k">\title</span><span class="p">{</span>Thesis Title<span class="p">}</span>
<span class="k">\subtitle</span><span class="p">{</span>Subtitle<span class="p">}</span>
<span class="k">\author</span><span class="p">{</span>John Doe<span class="p">}</span>
<span class="k">\date</span><span class="p">{</span>30. February 2022<span class="p">}</span>
<span class="k">\publishers</span><span class="p">{</span><span class="nt">\begin{tabular}</span><span class="p">{</span>lll<span class="p">}</span>
			<span class="p">&amp;</span>Chair: <span class="p">&amp;</span> Prof. A <span class="k">\\</span>
			<span class="p">&amp;</span>First Examinor: <span class="p">&amp;</span> Prof. B<span class="k">\\</span>
			<span class="p">&amp;</span>Second Examinor: <span class="p">&amp;</span> Prof. C
			<span class="nt">\end{tabular}</span>
			<span class="p">}</span>
<span class="k">\dedication</span><span class="p">{</span>Dedication<span class="p">}</span>
<span class="k">\maketitle</span>
<span class="c">% --------</span>
<span class="c">% Preface</span>
<span class="c">% --------</span>
<span class="k">\frontmatter</span> <span class="c">% switches to lower case roman page numbers</span>
<span class="k">\tableofcontents</span>
<span class="k">\listoffigures</span>
<span class="k">\listoftables</span>
<span class="c">% --------</span>
<span class="c">% Content</span>
<span class="c">% --------</span>
<span class="k">\mainmatter</span> <span class="c">% switches to latin page numbers</span>
<span class="k">\include</span><span class="p">{</span>source/introduction<span class="p">}</span>
<span class="k">\include</span><span class="p">{</span>source/results<span class="p">}</span>
<span class="k">\include</span><span class="p">{</span>source/conclusions<span class="p">}</span>
<span class="c">% --------</span>
<span class="c">% Appendix</span>
<span class="c">% --------</span>
<span class="k">\appendix</span><span class="c">%</span>
<span class="k">\include</span><span class="p">{</span>source/appendix<span class="p">}</span><span class="c">%</span>
<span class="c">% --------</span>
<span class="c">% Bibliography</span>
<span class="c">% --------</span>
<span class="k">\backmatter</span> <span class="c">% chapters are not numbered anymore</span>
<span class="k">\printbibliography</span><span class="c">%</span>
<span class="nt">\end{document}</span></code></pre></figure> <p>The <code class="language-plaintext highlighter-rouge">main.tex</code> file integrates the single chapters with the <code class="language-plaintext highlighter-rouge">\include{&lt;path/to/file.tex&gt;}</code> command (e.g., <code class="language-plaintext highlighter-rouge">\include{source/introduction}</code>). It is best practice to split the document into several smaller LaTeX files and combine them in a main file. This avoids a single large and diffcult to handle document and can save you precious time when you want to compile only smaller parts of the thesis. Compiling the entire project results in the following document:</p> <p style="text-align: center;"> <object data="/latex/thesis - MWE/main.pdf" width="75%" height="500" type="application/pdf"></object> </p> <h3 id="document-class">Document Class</h3> <p>Let’s walk through the document step by step. First, the doument uses the <code class="language-plaintext highlighter-rouge">scrbook</code> documentclass provided by the <a href="https://ctan.org/pkg/scrbook?lang=en"><code class="language-plaintext highlighter-rouge">Koma-script</code></a> project. This is a pretty powerful template that has many of the handy things recommended for a thesis already implemented and is flexibly adjustable. In fact, the number of options the documentclass has can be overwhelming and this blog post will only focus on the very basic ones.</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex"><span class="k">\documentclass</span>[
paper=a4, <span class="c">% change to a5 if needed</span>
pagesize=auto, 
fontsize=11pt, 
numbers=noendperiod,
headings=twolinechapter, <span class="c">% state the chapter first, then the chapter title</span>
listof=totoc, <span class="c">% add listo of figures and tables to toc</span>
bibliography=totoc <span class="c">% add bilbiography to toc</span>
]
<span class="p">{</span>scrbook<span class="p">}</span></code></pre></figure> <p>In the options many different aspects of the document can be defined, for example the paper size (<code class="language-plaintext highlighter-rouge">paper=a4</code>), the font size (<code class="language-plaintext highlighter-rouge">fontsize=11pt</code>) and whether period should follow after a chapter or section name (<code class="language-plaintext highlighter-rouge">numbers=noendperiod</code> disables this option). See the <a href="https://ctan.org/pkg/scrbook?lang=en"><code class="language-plaintext highlighter-rouge">scrbook</code> documentation</a> for details.</p> <h3 id="bibtex-and-zotero">Bibtex and Zotero</h3> <p>The <code class="language-plaintext highlighter-rouge">bibtex</code> is a way to integrate references into the thesis document and automatically build a sorted bibliography at the end of the document. In order to use <code class="language-plaintext highlighter-rouge">bibtex</code> we integrate the package with:</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex"><span class="k">\usepackage</span>[
style=authoryear, <span class="c">% other styles available</span>
backend=biber, <span class="c">% you will have to set biber as your backend in TeXstudio</span>
maxnames=2 <span class="c">% display maximum two authors</span>
]
<span class="p">{</span>biblatex<span class="p">}</span>
<span class="k">\addbibresource</span><span class="p">{</span>refs.bib<span class="p">}</span> <span class="c">% tell latex where the references are stored</span></code></pre></figure> <p>This is also a powerful tool with many available options but we will only set a few: the style is set to <code class="language-plaintext highlighter-rouge">autoryear</code>, the backend, that actually generates the bibliography, is set to be <code class="language-plaintext highlighter-rouge">biber</code> (make sure to <a href="https://tex.stackexchange.com/a/102864">set biber as your backend</a> in TeXstudio) and the et al. cut-off is set to three (i.e., a maximum of two names will be displayed for refereces in text). The content of <code class="language-plaintext highlighter-rouge">refs.bib</code> contains only two references and looks as follows:</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex">@book<span class="p">{</span>bishopPatternRecognitionMachine2006,
	title = <span class="p">{</span>Pattern Recognition and Machine Learning<span class="p">}</span>,
	author = <span class="p">{</span>Bishop, Christopher M.<span class="p">}</span>,
	year = <span class="p">{</span>2006<span class="p">}</span>,
	series = <span class="p">{</span>Information Science and Statistics<span class="p">}</span>,
	publisher = <span class="p">{</span>Springer<span class="p">}</span>,
	address = <span class="p">{</span>New York, NY<span class="p">}</span>,
	isbn = <span class="p">{</span>978-0-387-31073-2<span class="p">}</span>,
	lccn = <span class="p">{</span>Q327 .B52 2006<span class="p">}</span>
<span class="p">}</span>

@article<span class="p">{</span>rumelhartLearningRepresentationsBackpropagating1986,
	title = <span class="p">{</span>Learning Representations by Back-Propagating Errors<span class="p">}</span>,
	author = <span class="p">{</span>Rumelhart, David E. and Hinton, Geoffrey E. and Williams, Ronald J.<span class="p">}</span>,
	year = <span class="p">{</span>1986<span class="p">}</span>,
	journal = <span class="p">{</span>Nature<span class="p">}</span>,
	volume = <span class="p">{</span>323<span class="p">}</span>,
	number = <span class="p">{</span>6088<span class="p">}</span>,
	pages = <span class="p">{</span>533--536<span class="p">}</span>,
	issn = <span class="p">{</span>0028-0836, 1476-4687<span class="p">}</span>,
	doi = <span class="p">{</span>10.1038/323533a0<span class="p">}</span>,
	langid = <span class="p">{</span>english<span class="p">}</span>
<span class="p">}</span></code></pre></figure> <p>This file can be created manually or automatically. Personally, I recommend using the free reference management software <a href="https://www.zotero.org/">Zotero</a> for storing and organizing references. It strongly supports managing, reading and annotating references. When it comes to writing a thesis, the references can then automatically be exported to a bib file with the <a href="https://retorque.re/zotero-better-bibtex/exporting/auto/">Better BibTeX</a> plugin for Zotero. It is even possible to automatically keep the bib file in sync with your Zotero collection, which even further simplifies writing a thesis.</p> <p>In the document, we can cite the references from the bib file by their keys and the commands <code class="language-plaintext highlighter-rouge">\parencite{key}</code> and <code class="language-plaintext highlighter-rouge">\textcite{key}</code> commands. This is exemplarily shown in the introduction chapter with the <code class="language-plaintext highlighter-rouge">\parencite{bishopPatternRecognitionMachine2006}</code> and <code class="language-plaintext highlighter-rouge">\textcite{rumelhartLearningRepresentationsBackpropagating1986}</code> commands:</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex"><span class="k">\chapter</span><span class="p">{</span>Introduction<span class="p">}</span><span class="c">%</span>
<span class="k">\label</span><span class="p">{</span>ch:introduction<span class="p">}</span><span class="c">%</span>
An example for adding a reference in parenthesis <span class="k">\parencite</span><span class="p">{</span>bishopPatternRecognitionMachine2006<span class="p">}</span>. 
And one more example for a reference without parenthesis <span class="k">\textcite</span><span class="p">{</span>rumelhartLearningRepresentationsBackpropagating1986<span class="p">}</span>. 	

<span class="k">\lipsum</span><span class="c">%</span>
<span class="c">%</span>
<span class="k">\section</span><span class="p">{</span>Motivation<span class="p">}</span><span class="c">%</span>
<span class="k">\label</span><span class="p">{</span>sec:motivation<span class="p">}</span><span class="c">%</span>
<span class="k">\lipsum</span><span class="c">%</span>
<span class="nt">\begin{figure}</span>
	<span class="k">\centering</span>
	<span class="k">\includegraphics</span><span class="p">{</span>jamesWebb<span class="p">}</span>
	<span class="k">\caption</span><span class="na">[James Webb Stephan's Quintet]</span><span class="p">{</span>Image of the Stephan's Quintet recorded by the James Webb telescope<span class="p">}</span>
	<span class="k">\label</span><span class="p">{</span>fig:jamesWebb<span class="p">}</span>	
<span class="nt">\end{figure}</span>
<span class="c">%</span>
<span class="k">\section</span><span class="p">{</span>Objectives<span class="p">}</span><span class="c">%</span>
<span class="k">\label</span><span class="p">{</span>sec:objectives<span class="p">}</span><span class="c">%</span>
<span class="k">\lipsum</span><span class="c">%</span></code></pre></figure> <h3 id="additional-packages">Additional packages</h3> <p>Some additional packages are already integrated in the minimal working example:</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex"><span class="k">\usepackage</span><span class="p">{</span>lipsum<span class="p">}</span> <span class="c">% for blind text only</span></code></pre></figure> <p>is used for quickly adding blindtext, which can be deleted for a thesis, of course. In order to make links in the pdf work,</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex"><span class="k">\usepackage</span><span class="na">[hidelinks]</span><span class="p">{</span>hyperref<span class="p">}</span> <span class="c">% for internal links, such as Table of content (toc), figures and references</span></code></pre></figure> <p>is used. The <code class="language-plaintext highlighter-rouge">hidelinks</code> option makes the links only invisible, they are still there, however (feel free to compile with <code class="language-plaintext highlighter-rouge">\usepackage{hyperref}</code> to see the difference). For the integration of pictures in the document</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex"><span class="k">\usepackage</span><span class="p">{</span>graphicx<span class="p">}</span> <span class="c">% for the integration of figures</span>
<span class="k">\graphicspath</span><span class="p">{</span> <span class="p">{</span>figures/<span class="p">}</span> <span class="p">}</span> <span class="c">% set absolute path to figures</span></code></pre></figure> <p>is used. By setting the path of the figures, LaTeX knows where to search for them. Finally,</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex"><span class="k">\usepackage</span><span class="p">{</span>booktabs<span class="p">}</span> <span class="c">% for nicer tables </span></code></pre></figure> <p>is used for nicer tables in our document.</p> <h3 id="titlepage">Titlepage</h3> <p>The last building block of the minimal working example is the titlepage. The <code class="language-plaintext highlighter-rouge">scrbook</code> already provides functionality that can be used. By setting the different variables below and adding the command <code class="language-plaintext highlighter-rouge">\maketitle</code>, the titlepage is generated automatically:</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex"><span class="k">\titlehead</span><span class="p">{</span>Some University
		<span class="k">\hfill</span> WS~2022/2023<span class="k">\\</span>
	School of Something<span class="k">\\</span>
	University Street 100<span class="k">\\</span>
	12345 City<span class="p">}</span>
<span class="k">\subject</span><span class="p">{</span>Dissertation<span class="p">}</span>
<span class="k">\title</span><span class="p">{</span>Thesis Title<span class="p">}</span>
<span class="k">\subtitle</span><span class="p">{</span>Subtitle<span class="p">}</span>
<span class="k">\author</span><span class="p">{</span>John Doe<span class="p">}</span>
<span class="k">\date</span><span class="p">{</span>30. February 2022<span class="p">}</span>
<span class="k">\publishers</span><span class="p">{</span><span class="nt">\begin{tabular}</span><span class="p">{</span>lll<span class="p">}</span>
			<span class="p">&amp;</span>Chair: <span class="p">&amp;</span> Prof. A <span class="k">\\</span>
			<span class="p">&amp;</span>First Examinor: <span class="p">&amp;</span> Prof. B<span class="k">\\</span>
			<span class="p">&amp;</span>Second Examinor: <span class="p">&amp;</span> Prof. C
			<span class="nt">\end{tabular}</span>
			<span class="p">}</span>
<span class="k">\dedication</span><span class="p">{</span>Dedication<span class="p">}</span>
<span class="k">\maketitle</span></code></pre></figure> <p>This is only basic functionalyity and you might want to design your own title page with a logo of your university. In that case you can use</p> <figure class="highlight"><pre><code class="language-tex" data-lang="tex"><span class="nt">\begin{titlepage}</span>
<span class="c">% your custom title page here</span>
<span class="nt">\end{titlepage}</span></code></pre></figure> <h2 id="summary">Summary</h2> <p>At this point the first part of my lessons learned about writing a thesis in LaTeX comes to an end. To wrap up, the main takeways are</p> <ul> <li>LaTeX is a great alternative to a WYSIWYG editor for writing a thesis.</li> <li>By using a pre-defined document class such as <a href="https://ctan.org/pkg/scrbook?lang=en"><code class="language-plaintext highlighter-rouge">scrbook</code></a> one can quickly start writing a thesis in LaTeX.</li> <li>LaTeX integrates nicely with the free referece management software <a href="https://www.zotero.org/">Zotero</a> and enables a smooth and easy worklfow for adding references.</li> </ul> <p>In the <a href="/blog/2022/LaTeX-Thesis-Lessons-Learned-Part-2/">next part</a> we will look at further LaTeX packages that make writing a thesis in LaTeX even more convenient.</p>]]></content><author><name>Maxmimilian Benker</name></author><category term="research"/><category term="LaTeX"/><summary type="html"><![CDATA[A minimal working example]]></summary></entry></feed>